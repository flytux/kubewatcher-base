server:
  port: 8080

spring:
  application:
    name: kube-watcher
  jackson:
    default-property-inclusion: non_null
    serialization:
      indent-output: false
      write-dates-as-timestamps: false
    deserialization:
      fail-on-ignored-properties: false
      fail-on-unknown-properties: false
    property-naming-strategy: LOWER_CAMEL_CASE
    date-format: com.fasterxml.jackson.databind.util.StdDateFormat
  thymeleaf:
    cache: false
  main:
    allow-bean-definition-overriding: true

  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:/opt/kube-watcher/data/kw-data;AUTO_SERVER=true;MODE=MySQL
    username: admin
    password: password
    hikari:
      connection-init-sql: ""
      auto-commit: true
      minimum-idle: 10
      maximum-pool-size: 10
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true
  jpa:
    database: h2
    generate-ddl: false # db schema 생성 여부
    show-sql: true
    hibernate:
     ddl-auto: create

    properties:
      hibernate.format_sql: true
      hibernate.use_sql_comments: true
      hibernate.hbm2ddl.charset_name: UTF-8
      hibernate.hbm2ddl.import_files: classpath:sql/common-import.sql,classpath:sql/default-import.sql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect

  task:
    scheduling:
      pool:
        size: 10
      shutdown:
        await-termination: true
        await-termination-period: 30s

mybatis:
  executor-type: simple
  configuration:
    cache-enabled: false
    lazy-loading-enabled: false
    aggressive-lazy-loading: false
    default-statement-timeout: 5
    jdbc-type-for-null: NULL
    call-setters-on-nulls: true
    map-underscore-to-camel-case: true
#  type-handlers-package: com.kubeworks.watcher.data.typehandler


management:
  endpoints:
    web:
      exposure:
        include: health, info, prometheus, routes
  metrics:
    export:
      prometheus:
        enabled: true

zuul:
  retryable: true
  force-original-query-string-encoding: true
  host:
    connection-request-timeout-millis: 3000
    connect-timeout-millis: 2000
    max-per-route-connections: 20
    max-total-connections: 500

ribbon:
  okhttp:
    enabled: true

application:
  properties:
    root-domain: ''
    monitoring:
      default-cluster-name: local
      clusters:
        local:
          cluster-name: local
          k8s:
            # Digital Ocean Rancher Cluster for Reference
            # Add hostname for rancher.do, prometheus.do, loki.do for Cluster Ingress Controller IP
            # ex) 64.227.23.169   rancher.do prometheus.do
            # for docker run, add --add-host=rancher.do:64.227.23.169
            # for k8s run, add hostAliases to deployment manifest, yaml located in resources/
            url: "https://rancher.do/k8s/clusters/local"
            api-token: "kubeconfig-user-c7cpf:prf4v24k8d7tmhwgnl4v2zl7k2jn2lxb9r9jw9tldkkth76l8tsmwq"
          prometheus:
            proxy: true
            url: "http://prometheus.do"
#           loki:
#            proxy: true
#            url: "http://loki.do"
    dependencies:
      grafana:
        url: "http://162.243.175.190:3000"
        api-token: "eyJrIjoiczY0a1JhbWRsVEpnaDJ3MDRpZms0M1Y3aElSYTdoZHciLCJuIjoib25seSIsImlkIjoxfQ=="
        login-cookie-name: "grafana_session"

logging:
  level:
    root: info
    com.squareup.okhttp3: debug
    com.kubeworks.watcher.ecosystem.prometheus.feign.PrometheusFeginClient: info